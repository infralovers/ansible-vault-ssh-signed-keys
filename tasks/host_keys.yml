---

- name: load actual public host key
  register: ssh_public_key_file
  ansible.builtin.slurp:
    src: "{{ ssh_config_dir }}/{{ sshd_certfile }}.pub"

- name: load actual private host key
  register: ssh_private_key_file
  ansible.builtin.slurp:
    src: "{{ ssh_config_dir }}/{{ sshd_certfile }}"

- name: set fact about public host key
  ansible.builtin.set_fact:
    ssh_public_key: "{{ ssh_public_key_file['content'] | b64decode }}"
    ssh_private_key: "{{ ssh_private_key_file['content'] | b64decode }}"

- name: generate signed host key
  register: signed_host_key
  delegate_to: localhost
  become: false
  community.hashi_vault.vault_write:
    path: "{{ host_ssh_path }}/sign/{{ host_ssh_role }}"
    token: "{{ vault_token }}"
    data:
      cert_type: host
      public_key: "{{ ssh_public_key }}"

- name: update host certificate key
  ansible.builtin.copy:
    content: "{{ ssh_private_key }}"
    dest: "{{ ssh_config_dir }}/host_key"
    mode: "0640"
    owner: root
    group: root
  notify:
    - restart sshd

- name: update host certificate pub
  ansible.builtin.copy:
    content: "{{ ssh_public_key }}"
    dest: "{{ ssh_config_dir }}/host_key.pub"
    mode: "0640"
    owner: root
    group: root
  notify:
    - restart sshd

- name: update signed host certificate
  ansible.builtin.copy:
    content: "{{ signed_host_key.data.data.signed_key }}"
    dest: "{{ ssh_config_dir }}/host_key_signed.pub"
    mode: "0640"
    owner: root
    group: root
  notify:
    - restart sshd

- name: ensure ssh config with enabled host key
  ansible.builtin.lineinfile:
    regexp: "^HostKey"
    line: "HostKey {{ ssh_config_dir }}/host_key"
    dest: "{{ ssh_config_dir }}/sshd_config"
    mode: "0640"
  notify:
    - restart sshd

- name: update ssh config with signed host certificate from vault
  ansible.builtin.lineinfile:
    regexp: "^HostCertificate"
    line: "HostCertificate {{ ssh_config_dir }}/host_key_signed.pub"
    dest: "{{ ssh_config_dir }}/sshd_config"
    mode: "0640"
  notify:
    - restart sshd

- name: load trusted ca from vault
  register: vault_trusted_keys
  delegate_to: localhost
  become: false
  community.hashi_vault.vault_read:
    path: "{{ host_ssh_path }}/config/ca"
    token: "{{ vault_token }}"

- name: ensure .ssh directory exists
  become: false
  ansible.builtin.file:
    path: ~/.ssh/
    state: directory

- name: add trust authority configuration
  become: false
  ansible.builtin.copy:
    content: |
      {% for domain in cert_authority_domains %}
      @cert-authority {{ domain }} {{ vault_trusted_keys.data.data.public_key }}
      {% endfor %}
    dest: ~/.ssh/known_hosts
    mode: "0644"
