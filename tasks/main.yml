---

- name: check vault status
  uri:
    url: "{{ vault_addr }}/v1/sys/seal-status"
#    client_cert: "{{ vault_certfile }}"
    validate_certs: no
    method: GET
    body_format: json
    return_content: yes
  register: vault_seal_status

- name: fail if the vault server is not awailable
  fail:
    msg: "the vault server is sealed"
  when: vault_seal_status.json.sealed

- name: login to vault with approle
  when: vault_host_secret_id is defined and vault_host_role_id is defined and vault_host_secret_id | length > 0 and vault_host_role_id | length > 0
  block:
  - name: login approle
    delegate_to: localhost
    become: false
    register: login_data
    community.hashi_vault.vault_login:
      auth_method: approle
      mount_point: pipeline_approle
      role_id: "{{ vault_host_role_id }}"
      secret_id: "{{ vault_host_secret_id }}"

  - name: "Vault - set vault token"
    set_fact:
      vault_token: '{{ login_data.login.auth.client_token }}'

- include_tasks: user_keys.yml
  when: user_ssh_path is defined

- include_tasks: host_keys.yml
  when: host_ssh_path is defined