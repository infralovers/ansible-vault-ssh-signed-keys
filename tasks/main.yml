---

- name: check vault status
  uri:
    url: "{{ vault_addr }}/v1/sys/seal-status"
#    client_cert: "{{ vault_certfile }}"
    validate_certs: no
    method: GET
    body_format: json
    return_content: yes
  register: vault_seal_status

- name: fail if the vault server is not awailable
  fail:
    msg: "the vault server is sealed"
  when: vault_seal_status.json.sealed

- name: login to vault with approle
  when: vault_token is not defined
  uri:
    url: "{{vault_addr}}/v1/auth/approle/login"
    validate_certs: no
    method: POST
    body: "{ \"role_id\": \"{{ vault_host_role_id }}\", \"secret_id\": \"{{ vault_host_secret_id }}\"}"
    body_format: json
    return_content: yes
    headers:
      X-Vault-Request: "true"

- include_tasks: user_keys.yml
  when: user_ssh_path is defined

- include_tasks: host_keys.yml
  when: host_ssh_path is defined